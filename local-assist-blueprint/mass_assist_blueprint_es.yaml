blueprint:
  domain: automation
  name: Music Assistant - Soporte de Voz (solo)Local - Blueprint
  source_url: https://github.com/baukita/voice-support-es/blob/main/local-assist-blueprint/mass_assist_blueprint_es.yaml
  description: '
    ![Image](https://github.com/music-assistant/voice-support/blob/main/assets/music-assistant.png?raw=true)

    # Reproducir medios usando comandos de voz

    ### Uso

    Todas las frases deben:

    * Comenzar con las palabras `Reproducir` o `Escuchar` seguidas del tipo de ítem `artista/pista/álbum/lista de reproducción/estación de radio` y luego el nombre del ítem.

    * Para álbum y pista, puede ir opcionalmente seguido de `por (el) artista` y luego el nombre del artista.

    * Luego, opcionalmente, puede ir seguido de un nombre de área o dispositivo.

    * Luego, para artista, pista, álbum o lista de reproducción, puede ir opcionalmente seguido de la frase `usando el modo radio`.

    #### Variaciones aceptables

    Existen variaciones aceptables en algunas palabras y la inclusión de la palabra `el` es opcional.

    #### Ejemplos

    ```

      Reproducir el artista Pink Floyd en la cocina

      Escuchar el álbum Jagged Little Pill en el estudio

      Escuchar el álbum Greatest Hits por el artista James Taylor en la cocina

      Reproducir la pista New Years Day en el dormitorio

      Reproducir la pista New Years Day en el dormitorio usando el modo radio

      Reproducir la canción A Hard Days Night por Billy Joel en el dormitorio

      Escuchar la lista de reproducción Classic Rock en el estudio

      Escuchar la estación de radio BBC Radio 1 en el dormitorio

      Reproducir el álbum Classical Nights en el altavoz Sonos del dormitorio

      Escuchar el disco Classical Nights en el altavoz Sonos del dormitorio

      Reproducir la banda U2

    ```
  '
  input:
    default_player_entity_id_input:
      name: Default Media Player
      selector:
        entity:
          filter:
            integration: music_assistant
            domain: media_player


triggers:
  - trigger: conversation
    command:
      - "(reproducir|escuchar) [el ](album|ep|disco|single) {media_name} [de [el ](artista|banda|grupo) {artist}] [(en|usando) [el| la ]{area_or_player_name}][ (con|usando) {radio_mode}]"
    id: album
  - trigger: conversation
    command:
      - "(reproducir|escuchar) [la ](pista|cancion) {media_name} [de [el ](artista|banda|grupo) {artist}] [(en|usando) [el| la ]{area_or_player_name}][ (con|usando) {radio_mode}]"
    id: track
  - trigger: conversation
    command:
      - "(reproducir|escuchar) [la ](artista|banda|grupo) {media_name} [(en|usando) [el| la ]{area_or_player_name}][ (con|usando) {radio_mode}]"
    id: artist
  - trigger: conversation
    command:
      - "(reproducir|escuchar) [la ]((estacion de radio)|(radio)|(estacion)) {media_name} [(en|usando) [el| la ]{area_or_player_name}]"
    id: radio
  - trigger: conversation
    command:
      - "(reproducir|escuchar) [la ]playlist {media_name} [(en|usando) [el| la ]{area_or_player_name}][ (con|usando) {radio_mode}]"
    id: playlist
conditions: []
actions:
  - variables:
      default_player_entity_id: !input default_player_entity_id_input
      trigger_id: "{{ trigger.id }}"
      media_name: "{{ trigger.slots.media_name }}"
      media_type: |
        {% if 'radio' in media_name or 'Radio' in media_name %}
          radio
        {% else %}
          {{ trigger_id }}
        {% endif %}
      artist: "{{ trigger.slots.artist }}"
      area_or_player_name: "{{ trigger.slots.area_or_player_name }}"
      assist_device_id: "{{ trigger.device_id }}"
      radio_mode_str: "{{ trigger.slots.radio_mode or '' }}"
      radio_mode: "{{ 'radio' in radio_mode_str.lower() }}"
      player_entity_id_by_player_name: >
        {{ expand(integration_entities('music_assistant')) |
        selectattr("attributes.mass_player_type", 'defined') |
        selectattr("attributes.friendly_name", 'equalto', area_or_player_name) |
        join(', ', attribute="entity_id") }}
      player_entity_id_by_area_name: >
        {{ expand(area_entities(area_or_player_name)) |
        selectattr("attributes.mass_player_type", 'defined') |
        selectattr("attributes.friendly_name", 'equalto', area_or_player_name) |
        join(', ', attribute="entity_id") }}
      player_entity_id_by_assist_area: |
        {% if assist_device_id and area_id(assist_device_id)  %}
          {{ expand(area_entities(area_id(assist_device_id))) | selectattr("attributes.mass_player_type", 'defined')  | join(', ', attribute="entity_id") }}
        {% else %}
          None
        {% endif %}
      mass_player_entity_id: |
        {% if player_entity_id_by_player_name %}
          {{ player_entity_id_by_player_name }}
        {% elif player_entity_id_by_area_name %}
          {{ player_entity_id_by_area_name }}
        {% elif player_entity_id_by_assist_area  %}
          {{ player_entity_id_by_assist_area }}
        {% else %}
          {{ default_player_entity_id }}
        {% endif %}
      mass_player_name: "{{ state_attr(mass_player_entity_id, 'friendly_name') }}"
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ media_type == 'album' }}"
        sequence:
          - action: music_assistant.play_media
            metadata: {}
            data:
              media_id: "{{ media_name }}"
              artist: "{{ artist }}"
              media_type: "{{ media_type }}"
              radio_mode: "{{ radio_mode }}"
            target:
              entity_id: "{{ mass_player_entity_id }}"
      - conditions:
          - condition: template
            value_template: "{{ media_type == 'track' }}"
        sequence:
          - action: music_assistant.play_media
            metadata: {}
            data:
              media_id: "{{ media_name }}"
              artist: "{{ artist }}"
              media_type: "{{ media_type }}"
              radio_mode: "{{ radio_mode }}"
            target:
              entity_id: "{{ mass_player_entity_id }}"
      - conditions:
          - condition: template
            value_template: "{{ media_type == 'artist' }}"
        sequence:
          - action: music_assistant.play_media
            metadata: {}
            data:
              media_id: "{{ media_name }}"
              media_type: "{{ media_type }}"
              radio_mode: "{{ radio_mode }}"
            target:
              entity_id: "{{ mass_player_entity_id }}"
      - conditions:
          - condition: template
            value_template: "{{ media_type == 'radio' }}"
        sequence:
          - action: music_assistant.play_media
            metadata: {}
            data:
              media_id: "{{ media_name }}"
              media_type: "{{ media_type }}"
            target:
              entity_id: "{{ mass_player_entity_id }}"
      - conditions:
          - condition: template
            value_template: "{{ media_type == 'playlist' }}"
        sequence:
          - action: music_assistant.play_media
            metadata: {}
            data:
              media_id: "{{ media_name }}"
              media_type: "{{ media_type }}"
              radio_mode: "{{ radio_mode }}"
            target:
              entity_id: "{{ mass_player_entity_id }}"
  - set_conversation_response: "reproduciendo {{ trigger.slots.media_name }} en {{ mass_player_name }}"
mode: single
